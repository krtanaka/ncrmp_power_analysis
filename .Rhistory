rm(list = ls())
library(dplyr)
library(ggplot2)
library(raster)
library(sp)
library(rgdal)
library(tidyr)
library(patchwork)
library(SimSurvey)
library(sf)
load("data/Topography_NOAA_CRM_vol10.RData")
df_base = topo; rm(topo)
df_base$longitude = df_base$x
df_base$latitude = df_base$y
MHI_extent = read.csv("data/MHI_Extents.csv")
islands = MHI_extent$ISLAND
islands = islands[! islands %in% c("Kaula", "Lehua", "Molokini")] #remove islands that are too small
for (il in 1:length(islands)) {
# il = 2
island = islands[il]
extent = subset(MHI_extent, ISLAND == island)
df <- df_base %>%
subset(
longitude < extent$LEFT_XMIN &
longitude > extent$RIGHT_XMAX &
latitude > extent$TOP_YMAX &
latitude < extent$BOTTOM_YMIN)
df = df %>%
group_by(longitude, latitude) %>%
summarise(Topography = mean(Topography, na.rm = T))
df$cell = 1:dim(df)[1]; df$cell = as.numeric(df$cell)
df$division = as.numeric(1)
# plot(df$longitude, df$latitude, pch = 20, bty = "l", ann = F, col = 2)
##############################################################
### import hard/soft bottom substrate shapefile            ###
### adjust resolutions and merge with crm bathymetry data  ###
### these are outputs from "convert_biogeo_shp_to_raster.R ###
##############################################################
if (island == "Hawaii") load("data/biogeo/haw_hs_biogeo_shp.RData")
if (island == "Kahoolawe") load("data/biogeo/kah_hs_biogeo_shp.RData")
if (island == "Kauai") load("data/biogeo/kau_hs_biogeo_shp.RData")
if (island == "Lanai") load("data/biogeo/lan_hs_biogeo_shp.RData")
if (island == "Maui") load("data/biogeo/mai_hs_biogeo_shp.RData")
if (island == "Molokai") load("data/biogeo/mol_hs_biogeo_shp.RData")
if (island == "Niihau") load("data/biogeo/nii_hs_biogeo_shp.RData")
if (island == "Oahu") load("data/biogeo/oah_hs_biogeo_shp.RData")
# plot(bottom_type$lon, bottom_type$lat, pch = ".", bty = "l", ann = F, col = 4)
utmcoor <- SpatialPoints(cbind(bottom_type$lon, bottom_type$lat), proj4string = CRS("+proj=utm +units=m +zone=4"))
longlatcoor <- spTransform(utmcoor,CRS("+proj=longlat"))
bottom_type$lon <- coordinates(longlatcoor)[,1]
bottom_type$lat <- coordinates(longlatcoor)[,2]
rm(longlatcoor, utmcoor)
bottom_type = bottom_type %>% filter(!HardSoft %in% c("Unknown", "Land", "Other"))
# bottom_type = bottom_type %>% filter(!HardSoft %in% c("Land"))
bottom_type$hs = ifelse(bottom_type$HardSoft == "Hard", 1, 2)
bottom_type = as.matrix(bottom_type[,c("lon", "lat", "hs")])
e = extent(bottom_type[,1:2])
crm_res = rasterFromXYZ(df[,c("longitude", "latitude", "cell")])
# plot(crm_res, col = rainbow(100))
crm_res %>%
rasterToPoints(spatial = T) %>%
as.data.frame() %>%
ggplot(aes(x, y, color = cell)) +
geom_hex(bins = 50) +
coord_fixed() +
scale_fill_gradientn(colors = cm.colors(10)) +
ggdark::dark_mode()
dim(crm_res)
crm_res
# rasterize it, but be careful with resolutions
res = 1
r <- raster(e, ncol = round((dim(crm_res)[2]/res), digits = 0), nrow = round(dim(crm_res)[1]/res, digits = 0))
bottom_type <- rasterize(bottom_type[, 1:2], r, bottom_type[,3], fun = mean)
bottom_type %>%
rasterToPoints(spatial = T) %>%
as.data.frame() %>%
ggplot(aes(x, y, color = layer)) +
geom_hex(bins = 50) +
coord_fixed() +
scale_fill_viridis_b("hard_soft") +
ggdark::dark_theme_minimal()
dim(bottom_type)
bottom_type
default_proj = "+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"
crs(bottom_type) = default_proj
plot(bottom_type)
bottom_type = resample(bottom_type, crm_res, method = "bilinear")
crm_res = as.data.frame(rasterToPoints(crm_res))
bottom_type = as.data.frame(rasterToPoints(bottom_type))
bottom_type = left_join(crm_res, bottom_type)
colnames(bottom_type) = c("longitude", "latitude", "cell", "substrate")
summary(bottom_type)
# qplot(bottom_type$longitude, bottom_type$latitude, color = bottom_type$substrate) + coord_fixed()
bottom_type %>%
ggplot(aes(longitude, latitude, color = substrate)) +
geom_hex(bins = 50) +
coord_fixed() +
scale_fill_viridis_b("hard_soft") +
ggdark::dark_theme_minimal()
df = merge(df, bottom_type, by = "cell")
df$substrate = round(df$substrate, digits = 0)
df = df[!is.na(df$substrate), ]
# make strata by depth * bottom type
df$strat = ""
df$strat = ifelse(df$Topography <= 0  & df$Topography >= -6  & df$substrate == 1, 1L, df$strat) # shallow & hard
df$strat = ifelse(df$Topography < -6  & df$Topography >= -18 & df$substrate == 1, 2L, df$strat) # mid & hard
df$strat = ifelse(df$Topography < -18 &                        df$substrate == 1, 3L, df$strat) # deep & hard
df$strat = ifelse(df$Topography <= 0  & df$Topography >= -6  & df$substrate == 2, 4L, df$strat) # shallow & soft
df$strat = ifelse(df$Topography < -6  & df$Topography >= -18 & df$substrate == 2, 5L, df$strat) # mid & soft
df$strat = ifelse(df$Topography < -18 &                        df$substrate == 2, 6L, df$strat) # deep & soft
df$strat = as.numeric(df$strat)
df$depth = as.numeric(df$Topography*-1)
colnames(df)[2:3] = c("longitude", "latitude")
depth = df %>%
ggplot( aes(longitude, latitude)) +
geom_tile(aes(fill = depth, width = 0.005, height = 0.005)) +
scale_fill_gradientn(colours = colorRamps::matlab.like(100), "Bathymetry (m)") +
coord_fixed() +
ggdark::dark_theme_minimal() +
theme(axis.title = element_blank(),
legend.position = "bottom")
substrate = df %>%
ggplot( aes(longitude, latitude, fill = factor(substrate))) +
geom_tile(aes(width = 0.005, height = 0.005)) +
scale_fill_discrete("Bottom type") +
coord_fixed() +
theme_minimal() +
ggdark::dark_theme_minimal() +
theme(axis.title = element_blank(),
legend.position = "bottom")
strat = df %>%
ggplot( aes(longitude, latitude, fill = as.factor(strat))) +
geom_tile(aes(width = 0.005, height = 0.005)) +
scale_fill_discrete("Strata") +
coord_fixed() +
theme_minimal() +
ggdark::dark_theme_minimal() +
theme(axis.title = element_blank(),
legend.position = "bottom")
pdf(paste0("outputs/survey_grid_", islands[il], ".pdf"), height = 8, width = 10)
p =  depth + substrate + strat
print(p)
dev.off()
df = as.data.frame(df)
cell = rasterFromXYZ(df[,c("longitude", "latitude", "cell")]); plot(cell)
division = rasterFromXYZ(df[,c("longitude", "latitude", "division")]); plot(division)
strat = rasterFromXYZ(df[,c("longitude", "latitude", "strat")]); plot(strat)
depth = rasterFromXYZ(df[,c("longitude", "latitude", "depth")]); plot(depth)
default_proj = "+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"
## UTM projection for Hawaii = 5, for Kauai-Maui = 4
zone <- (floor((df$longitude[1] + 180)/6) %% 60) + 1
## http://www.gdsihawaii.com/hawpacgis/docs/HawaiiCooSys.pdf
# utm_proj <- "+proj=utm +ellps=WGS84 +datum=WGS84 +units=km +no_defs"
utm_proj <- "+proj=utm +zone=4 +ellps=WGS84 +datum=WGS84 +units=km +no_defs"
# utm_proj <- "+proj=utm +zone=5 +ellps=WGS84 +datum=WGS84 +units=km +no_defs"
crs(cell) = default_proj; cell = projectRaster(cell, crs = utm_proj); plot(cell)
crs(division) = default_proj; division = projectRaster(division, crs = utm_proj); plot(division)
crs(strat) = default_proj; strat = projectRaster(strat, crs = utm_proj); plot(strat)
crs(depth) = default_proj; depth = projectRaster(depth, crs = utm_proj); plot(depth)
survey_grid_kt = stack(cell, division, strat, depth)
survey_grid_kt$strat = round(survey_grid_kt$strat, digits = 0)
# values(survey_grid_kt$strat) = ifelse(values(survey_grid_kt$strat) > 3, 3, values(survey_grid_kt$strat))
values(survey_grid_kt$division) = ifelse(is.na(values(survey_grid_kt$division)), NA, 1)
sp::spplot(survey_grid$cell) #SimSurvey example
sp::spplot(survey_grid_kt$cell)
sp::spplot(survey_grid$division) #SimSurvey example
sp::spplot(survey_grid_kt$division)
sp::spplot(survey_grid$strat) #SimSurvey example
sp::spplot(survey_grid_kt$strat)
sp::spplot(survey_grid$depth) #SimSurvey example
sp::spplot(survey_grid_kt$depth)
p <- raster::rasterToPolygons(survey_grid$strat, dissolve = TRUE)
sp::plot(p)
p <- raster::rasterToPolygons(survey_grid_kt$strat, dissolve = TRUE)
sp::plot(p)
survey_grid_kt = readAll(survey_grid_kt)
save(survey_grid_kt, file = paste0("data/survey_grid_", islands[il], ".RData"))
}
rm(list = ls())
library(readr)
library(dplyr)
library(rnaturalearth)
library(rgeos)
library(sf)
library(ggplot2)
library(stringr)
load("data/SURVEY MASTER.RData"); df = SURVEY_MASTER
df <- df %>% subset(ISLAND == "Hawaii")
df %>% group_by(
DEPTH_BIN,
SEC_NAME,
REEF_ZONE,
OBS_YEAR) %>%
summarise(n = n()) %>%
na.omit() %>%
ggplot(aes(OBS_YEAR, n, color = n)) +
geom_line() +
scale_fill_viridis_c() +
facet_grid(SEC_NAME~DEPTH_BIN ) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df$LONGITUDE_LOV = ifelse(df$LONGITUDE_LOV < 0,
df$LONGITUDE_LOV + 360,
df$LONGITUDE_LOV)
time_stamp = str_split_fixed(df$DATE_, "/", 3)
colnames(time_stamp) = c("Month", "Day", "Year")
df = cbind(time_stamp, df)
df = df %>%
group_by(LATITUDE_LOV, LONGITUDE_LOV, Day, Month, Year) %>%
summarise(n = n())
df = df[complete.cases(df), ]
world <- rnaturalearth::ne_countries(scale = 'small', returnclass = "sp")
box_cut <- bbox2SP(n = 90, s = -90, w = -20, e = 20, proj4string = world@proj4string)
world_crop <- gDifference(world, box_cut)
pacific_crop <- world_crop %>%
st_as_sf() %>%
st_shift_longitude() %>%
st_crop(c(
# xmin = st_bbox(.)[["xmin"]],
# xmax = st_bbox(.)[["xmax"]],
xmin = min(df$LONGITUDE_LOV),
xmax = max(df$LONGITUDE_LOV),
ymin = min(df$LATITUDE_LOV),
ymax = max(df$LATITUDE_LOV)))
df$Month = ifelse(df$Month %in% c(1:9), sprintf("%02d", as.numeric(df$Month)), df$Month)
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_point(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV, color = log(n)), alpha = 0.5, size = 3) +
scale_color_viridis_c() +
# facet_grid(Month ~ Year) +
facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
# ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_color_viridis_c() +
# facet_grid(Month ~ Year) +
facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
# ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_color_viridis_c() +
facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
# ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_color_viridis_b() +
facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
# ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_fill_viridis_d() +
facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
# ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_fill_viridis_c() +
facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
# ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_fill_viridis_c() +
facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_fill_viridis_c() +
# facet_grid(Month ~ Year) +
facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_fill_viridis_c("") +
# facet_grid(Month ~ Year) +
facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV)) +
scale_fill_viridis_c("") +
# facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
?geom_hex
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV), bins = 100) +
scale_fill_viridis_c("") +
# facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV), bins = 100) +
scale_fill_viridis_c("") +
facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV), bins = 100) +
scale_fill_viridis_c("") +
# facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV), bins = 10) +
scale_fill_viridis_c("") +
# facet_grid(Month ~ Year) +
# facet_wrap(~Year) +
facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV), bins = 10) +
scale_fill_viridis_c("") +
# facet_grid(Month ~ Year) +
facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
