load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
mutate(response = BIOMASS_G_M2)
df$response = ifelse(df$TROPHIC_MONREP == sp, df$response, 0)
summary(df$DEPTH)
df = df %>% subset(DEPTH > 0)
load("data/BenthicCover_2010-2020_Tier1_SITE_MHI_w_CRM.RData") #live coral cover, only for MHI, with CRM_Bathy data
df = df %>%
subset(REGION == region) %>%
mutate(response = CORAL*0.01)
df$DEPTH = df$DEPTH_e*-1
df = df %>% subset(DEPTH > 0)
load("data/BenthicCover_2010-2020_Tier1_SITE_MHI_w_CRM.RData") #live coral cover, only for MHI, with CRM_Bathy data
df = df %>%
subset(REGION == region) %>%
mutate(response = CORAL*0.01)
df$DEPTH = df$DEPTH_e*-1
df$DEPTH == 0
df$DEPTH = ifelse(df$DEPTH == 0, df$DEPTH + 0.5, df$DEPTH)
summary(df)
load("data/BenthicCover_2010-2020_Tier1_SITE_MHI_w_CRM.RData") #live coral cover, only for MHI, with CRM_Bathy data
df = df %>%
subset(REGION == region) %>%
mutate(response = CORAL*0.01)
df$DEPTH = df$DEPTH_e*-1
df$DEPTH = ifelse(df$DEPTH == 0, df$DEPTH + 0.5, df$DEPTH)
# north-south gradient
df %>%
group_by(ISLAND) %>%
summarise(n = median(response, na.rm = T),
lat = mean(LATITUDE)) %>%
arrange(desc(lat)) %>%
ggplot(aes(lat, n, label = ISLAND)) +
geom_text()
islands = c("Kauai", #1
"Lehua", #2
"Niihau", #3
"Kaula", #4
"Oahu", #5
"Molokai", #6
"Maui", #7
"Lanai", #8
"Molokini", #9
"Kahoolawe", #10
"Hawaii")#[5]
df = df %>%
subset(ISLAND %in% islands) %>%
group_by(LONGITUDE, LATITUDE, ISLAND, OBS_YEAR, DATE_, DEPTH) %>%
summarise(response = median(response, na.rm = T))
hist(df$response)
summary(df$response)
zone <- (floor((df$LONGITUDE[1] + 180)/6) %% 60) + 1
xy_utm = as.data.frame(cbind(utm = project(as.matrix(df[, c("LONGITUDE", "LATITUDE")]), paste0("+proj=utm +units=km +zone=", zone))))
colnames(xy_utm) = c("X", "Y"); plot(xy_utm, pch = ".", bty = 'n')
df = cbind(df, xy_utm)
n_knots = 300
rea_spde <- make_mesh(df, c("X", "Y"), n_knots = n_knots, type = "cutoff_search")
plot(rea_spde, pch = "."); axis(1); axis(2)
df$year = df$OBS_YEAR
df$depth = df$DEPTH
df$depth_scaled = scale(log(df$depth))
df$depth_scaled2 = df$depth_scaled ^ 2
plot(df$depth, df$response, pch = ".", bty = "n")
plot(df[11:13], pch = ".")
View(df)
obs_year = unique(df$year)
full_year = seq(min(df$year), max(df$year), by = 1)
missing_year = setdiff(full_year, obs_year)
missing_year = as.integer(missing_year);missing_year
density_model <- sdmTMB(
data = df,
formula = response ~ as.factor(year) + depth_scaled + depth_scaled2,
silent = F,
# extra_time = missing_year,
spatial_trend = T,
spatial_only = F,
time = "year",
spde = rea_spde,
anisotropy = T,
# family = tweedie(link = "log"),
family = binomial(link = "logit"),
control = sdmTMBcontrol(step.min = 0.01, step.max = 1)
)
df
summary(df)
library(sdmTMB)
library(dplyr)
library(ggplot2)
library(rgdal)
library(colorRamps)
rm(list = ls())
# Targets
# 4 functional groups
# live coral cover
# adult juvenile density
# Total numerical density estimates (individuals per 100 m2) were obtained by dividing fish counts in each survey by the survey area (353 m2 from two 15-m diameter survey cylinders) and multiplying by 100. - Nadon et al. 2020
region = "MHI"
uku_or_not = F
# load("data/ALL_REA_FISH_RAW.rdata")
# df %>%
#   subset(REGION == region) %>%
#   group_by(TAXONNAME) %>%
#   summarise(n = sum(BIOMASS_G_M2, na.rm = T)) %>%
#   # summarise(n = sum(COUNT, na.rm = T)) %>%
#   mutate(freq = n/sum(n)) %>%
#   arrange(desc(freq)) %>%
#   top_n(5)
response_variable = "fish_count";      sp = ifelse(uku_or_not == T, "Aprion virescens", "Chromis vanderbilti")
response_variable = "fish_biomass";    sp = ifelse(uku_or_not == T, "Aprion virescens", "Acanthurus olivaceus")
response_variable = "trophic_biomass"; sp = c("PISCIVORE", "PLANKTIVORE", "PRIMARY", "SECONDARY")[1]
response_variable = "coral_cover";     sp = c("CCA", "CORAL", "EMA", "HAL", "I", "MA", "SC", "SED", "TURF")[2]
if (response_variable == "fish_count") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
mutate(response = COUNT*100)
df$response = ifelse(df$TAXONNAME == sp, df$response, 0)
}
if (response_variable == "fish_biomass") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
# mutate(response = BIOMASS_G_M2*0.001)
mutate(response = BIOMASS_G_M2)
df$response = ifelse(df$TAXONNAME == sp, df$response, 0)
}
if (response_variable == "trophic_biomass") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
mutate(response = BIOMASS_G_M2)
df$response = ifelse(df$TROPHIC_MONREP == sp, df$response, 0)
}
if (response_variable == "coral_cover") {
load("data/BenthicCover_2010-2020_Tier1_SITE_MHI_w_CRM.RData") #live coral cover, only for MHI, with CRM_Bathy data
df = df %>%
subset(REGION == region) %>%
mutate(response = CORAL*0.01)
df$DEPTH = df$DEPTH_e*-1
df$DEPTH = ifelse(df$DEPTH == 0, df$DEPTH + 0.5, df$DEPTH)
}
# north-south gradient
df %>%
group_by(ISLAND) %>%
summarise(n = median(response, na.rm = T),
lat = mean(LATITUDE)) %>%
arrange(desc(lat)) %>%
ggplot(aes(lat, n, label = ISLAND)) +
geom_text()
islands = c("Kauai", #1
"Lehua", #2
"Niihau", #3
"Kaula", #4
"Oahu", #5
"Molokai", #6
"Maui", #7
"Lanai", #8
"Molokini", #9
"Kahoolawe", #10
"Hawaii")#[5]
df = df %>%
subset(ISLAND %in% islands) %>%
group_by(LONGITUDE, LATITUDE, ISLAND, OBS_YEAR, DATE_, DEPTH) %>%
summarise(response = median(response, na.rm = T))
hist(df$response)
summary(df$response)
zone <- (floor((df$LONGITUDE[1] + 180)/6) %% 60) + 1
xy_utm = as.data.frame(cbind(utm = project(as.matrix(df[, c("LONGITUDE", "LATITUDE")]), paste0("+proj=utm +units=km +zone=", zone))))
colnames(xy_utm) = c("X", "Y"); plot(xy_utm, pch = ".", bty = 'n')
df = cbind(df, xy_utm)
n_knots = 300
n_knots = 100 # a coarse mesh for speed
rea_spde <- make_mesh(df, c("X", "Y"), n_knots = n_knots, type = "cutoff_search")
plot(rea_spde, pch = "."); axis(1); axis(2)
df$year = df$OBS_YEAR
df$depth = df$DEPTH
df$depth_scaled = scale(log(df$depth))
df$depth_scaled2 = df$depth_scaled ^ 2
plot(df$depth, df$response, pch = ".", bty = "n")
plot(df[11:13], pch = ".")
obs_year = unique(df$year)
full_year = seq(min(df$year), max(df$year), by = 1)
missing_year = setdiff(full_year, obs_year)
missing_year = as.integer(missing_year);missing_year
summary(df)
density_model <- sdmTMB(
data = df,
formula = response ~ as.factor(year) + depth_scaled + depth_scaled2,
silent = F,
# extra_time = missing_year,
spatial_trend = T,
spatial_only = F,
time = "year",
spde = rea_spde,
anisotropy = T,
# family = tweedie(link = "log"),
family = binomial(link = "logit"),
control = sdmTMBcontrol(step.min = 0.01, step.max = 1)
)
density_model <- sdmTMB(
data = df,
formula = response ~ as.factor(year) ,
silent = F,
# extra_time = missing_year,
spatial_trend = T,
spatial_only = F,
time = "year",
spde = rea_spde,
anisotropy = T,
# family = tweedie(link = "log"),
family = binomial(link = "logit"),
control = sdmTMBcontrol(step.min = 0.01, step.max = 1)
)
?sdmTMB
density_model <- sdmTMB(
data = df,
formula = response ~ as.factor(year) + depth_scaled + depth_scaled2,
silent = F,
# extra_time = missing_year,
spatial_trend = T,
spatial_only = F,
time = "year",
spde = rea_spde,
anisotropy = T,
# family = tweedie(link = "log"),
family = quasibinomial(link = "logit"),
control = sdmTMBcontrol(step.min = 0.01, step.max = 1)
)
density_model <- sdmTMB(
data = df,
formula = response ~ as.factor(year) + depth_scaled + depth_scaled2,
silent = F,
# extra_time = missing_year,
spatial_trend = T,
spatial_only = F,
time = "year",
spde = rea_spde,
anisotropy = T,
# family = tweedie(link = "log"),
family = nbinom2(link = "logit"),
control = sdmTMBcontrol(step.min = 0.01, step.max = 1)
)
# look at gradients
max(density_model$gradients)
df$residuals <- residuals(density_model)
qqnorm(df$residuals, ylim = c(-5, 5), xlim = c(-5, 5), bty = "n", pch = 20);abline(a = 0, b = 1)
m_p <- predict(density_model); m_p = m_p[,c("density", "est")]
m_p <- predict(density_model); m_p = m_p[,c("response", "est")]
ggdark::invert_geom_defaults()
m_p  %>%
ggplot(aes(density, exp(est))) +
geom_point(alpha = 0.2) +
coord_fixed(ratio = 1) +
ylab("predicted_density") +
xlab("observed_density") +
geom_abline(intercept = 0, slope = 1) +
geom_smooth(method = "lm", se = T)
m_p  %>%
ggplot(aes(density, exp(est))) +
geom_point(alpha = 0.2)
View(m_p)
?predict
m_p <- predict(density_model, scale = "response"); m_p = m_p[,c("response", "est")]
m_p <- predict(density_model, type = "response")
glimpse(m_p)
m_p <- predict(density_model, type = "linear"); m_p = m_p[,c("response", "est")]
glimpse(m_p)
m_p <- predict(density_model, type = "response"); m_p = m_p[,c("response", "est")]
glimpse(m_p)
exp(m_p$est)
hist(exp(m_p$est))
m_p <- predict(density_model); m_p = m_p[,c("response", "est")]
m_p  %>%
ggplot(aes(response, exp(est))) +
geom_point(alpha = 0.2)
ggdark::invert_geom_defaults()
m_p  %>%
ggplot(aes(response, exp(est))) +
geom_point(alpha = 0.2) +
coord_fixed(ratio = 1) +
ylab("predicted_density") +
xlab("observed_density") +
geom_abline(intercept = 0, slope = 1) +
geom_smooth(method = "lm", se = T)
ggplot(df, aes_string("X", "Y", fill = "residuals")) +
geom_tile(aes(height = 0.5, width = 0.5)) +
facet_wrap(.~ISLAND, scales = "free") +
xlab("Eastings") +
ylab("Northings") +
scale_fill_gradient2() +
ggdark::dark_theme_void()
#  extract some parameter estimates
sd <- as.data.frame(summary(TMB::sdreport(density_model$tmb_obj)))
r <- density_model$tmb_obj$report()
?nbinom2
density_model <- sdmTMB(
data = df,
formula = response ~ as.factor(year) + depth_scaled + depth_scaled2,
silent = F,
# extra_time = missing_year,
spatial_trend = T,
spatial_only = F,
time = "year",
spde = rea_spde,
anisotropy = T,
# family = tweedie(link = "log"),
family = nbinom2(link = "log"),
control = sdmTMBcontrol(step.min = 0.01, step.max = 1)
)
library(sdmTMB)
library(dplyr)
library(ggplot2)
library(rgdal)
library(colorRamps)
rm(list = ls())
# Targets
# 4 functional groups
# live coral cover
# adult juvenile density
# Total numerical density estimates (individuals per 100 m2) were obtained by dividing fish counts in each survey by the survey area (353 m2 from two 15-m diameter survey cylinders) and multiplying by 100. - Nadon et al. 2020
region = "MHI"
uku_or_not = F
# load("data/ALL_REA_FISH_RAW.rdata")
# df %>%
#   subset(REGION == region) %>%
#   group_by(TAXONNAME) %>%
#   summarise(n = sum(BIOMASS_G_M2, na.rm = T)) %>%
#   # summarise(n = sum(COUNT, na.rm = T)) %>%
#   mutate(freq = n/sum(n)) %>%
#   arrange(desc(freq)) %>%
#   top_n(5)
response_variable = "fish_count";      sp = ifelse(uku_or_not == T, "Aprion virescens", "Chromis vanderbilti")
response_variable = "fish_biomass";    sp = ifelse(uku_or_not == T, "Aprion virescens", "Acanthurus olivaceus")
response_variable = "trophic_biomass"; sp = c("PISCIVORE", "PLANKTIVORE", "PRIMARY", "SECONDARY")[1]
response_variable = "coral_cover";     sp = c("CCA", "CORAL", "EMA", "HAL", "I", "MA", "SC", "SED", "TURF")[2]
if (response_variable == "fish_count") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
mutate(response = COUNT*100)
df$response = ifelse(df$TAXONNAME == sp, df$response, 0)
}
if (response_variable == "fish_biomass") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
# mutate(response = BIOMASS_G_M2*0.001)
mutate(response = BIOMASS_G_M2)
df$response = ifelse(df$TAXONNAME == sp, df$response, 0)
}
if (response_variable == "trophic_biomass") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
mutate(response = BIOMASS_G_M2)
df$response = ifelse(df$TROPHIC_MONREP == sp, df$response, 0)
}
if (response_variable == "coral_cover") {
load("data/BenthicCover_2010-2020_Tier1_SITE_MHI_w_CRM.RData") #live coral cover, only for MHI, with CRM_Bathy data
df = df %>%
subset(REGION == region) %>%
mutate(response = CORAL*0.01)
df$DEPTH = df$DEPTH_e*-1
df$DEPTH = ifelse(df$DEPTH == 0, df$DEPTH + 0.5, df$DEPTH)
}
# north-south gradient
df %>%
group_by(ISLAND) %>%
summarise(n = median(response, na.rm = T),
lat = mean(LATITUDE)) %>%
arrange(desc(lat)) %>%
ggplot(aes(lat, n, label = ISLAND)) +
geom_text()
islands = c("Kauai", #1
"Lehua", #2
"Niihau", #3
"Kaula", #4
"Oahu", #5
"Molokai", #6
"Maui", #7
"Lanai", #8
"Molokini", #9
"Kahoolawe", #10
"Hawaii")#[5]
df = df %>%
subset(ISLAND %in% islands) %>%
group_by(LONGITUDE, LATITUDE, ISLAND, OBS_YEAR, DATE_, DEPTH) %>%
summarise(response = median(response, na.rm = T))
hist(df$response)
summary(df$response)
zone <- (floor((df$LONGITUDE[1] + 180)/6) %% 60) + 1
xy_utm = as.data.frame(cbind(utm = project(as.matrix(df[, c("LONGITUDE", "LATITUDE")]), paste0("+proj=utm +units=km +zone=", zone))))
colnames(xy_utm) = c("X", "Y"); plot(xy_utm, pch = ".", bty = 'n')
df = cbind(df, xy_utm)
n_knots = 300
n_knots = 100 # a coarse mesh for speed
rea_spde <- make_mesh(df, c("X", "Y"), n_knots = n_knots, type = "cutoff_search")
plot(rea_spde, pch = "."); axis(1); axis(2)
df$year = df$OBS_YEAR
df$depth = df$DEPTH
df$depth_scaled = scale(log(df$depth))
df$depth_scaled2 = df$depth_scaled ^ 2
plot(df$depth, df$response, pch = ".", bty = "n")
plot(df[11:13], pch = ".")
obs_year = unique(df$year)
full_year = seq(min(df$year), max(df$year), by = 1)
missing_year = setdiff(full_year, obs_year)
missing_year = as.integer(missing_year);missing_year
library(sdmTMB)
library(dplyr)
library(ggplot2)
library(rgdal)
library(colorRamps)
rm(list = ls())
region = "MHI"
uku_or_not = F
response_variable = "fish_count";      sp = ifelse(uku_or_not == T, "Aprion virescens", "Chromis vanderbilti")
response_variable = "fish_biomass";    sp = ifelse(uku_or_not == T, "Aprion virescens", "Acanthurus olivaceus")
response_variable = "trophic_biomass"; sp = c("PISCIVORE", "PLANKTIVORE", "PRIMARY", "SECONDARY")[1]
response_variable = "coral_cover";     sp = c("CCA", "CORAL", "EMA", "HAL", "I", "MA", "SC", "SED", "TURF")[2]
if (response_variable == "fish_count") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
mutate(response = COUNT*100)
df$response = ifelse(df$TAXONNAME == sp, df$response, 0)
}
if (response_variable == "fish_biomass") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
# mutate(response = BIOMASS_G_M2*0.001)
mutate(response = BIOMASS_G_M2)
df$response = ifelse(df$TAXONNAME == sp, df$response, 0)
}
if (response_variable == "trophic_biomass") {
load("data/ALL_REA_FISH_RAW.rdata")
df = df %>%
subset(REGION == region) %>%
mutate(response = BIOMASS_G_M2)
df$response = ifelse(df$TROPHIC_MONREP == sp, df$response, 0)
}
if (response_variable == "coral_cover") {
load("data/BenthicCover_2010-2020_Tier1_SITE_MHI_w_CRM.RData") #live coral cover, only for MHI, with CRM_Bathy data
df = df %>%
subset(REGION == region) %>%
mutate(response = CORAL*0.01)
df$DEPTH = df$DEPTH_e*-1
df$DEPTH = ifelse(df$DEPTH == 0, df$DEPTH + 0.5, df$DEPTH)
}
# north-south gradient
df %>%
group_by(ISLAND) %>%
summarise(n = median(response, na.rm = T),
lat = mean(LATITUDE)) %>%
arrange(desc(lat)) %>%
ggplot(aes(lat, n, label = ISLAND)) +
geom_text()
islands = c("Kauai", #1
"Lehua", #2
"Niihau", #3
"Kaula", #4
"Oahu", #5
"Molokai", #6
"Maui", #7
"Lanai", #8
"Molokini", #9
"Kahoolawe", #10
"Hawaii")#[5]
islands = c("Kauai", #1
"Lehua", #2
"Niihau", #3
"Kaula", #4
"Oahu", #5
"Molokai", #6
"Maui", #7
"Lanai", #8
"Molokini", #9
"Kahoolawe", #10
"Hawaii")[5]
df = df %>%
subset(ISLAND %in% islands) %>%
group_by(LONGITUDE, LATITUDE, ISLAND, OBS_YEAR, DATE_, DEPTH) %>%
summarise(response = median(response, na.rm = T))
hist(df$response)
summary(df$response)
zone <- (floor((df$LONGITUDE[1] + 180)/6) %% 60) + 1
xy_utm = as.data.frame(cbind(utm = project(as.matrix(df[, c("LONGITUDE", "LATITUDE")]), paste0("+proj=utm +units=km +zone=", zone))))
colnames(xy_utm) = c("X", "Y"); plot(xy_utm, pch = ".", bty = 'n')
df = cbind(df, xy_utm)
n_knots = 300
rea_spde <- make_mesh(df, c("X", "Y"), n_knots = n_knots, type = "cutoff_search")
n_knots = 100 # a coarse mesh for speed
rea_spde <- make_mesh(df, c("X", "Y"), n_knots = n_knots, type = "cutoff_search")
islands = c("Kauai", #1
"Lehua", #2
"Niihau", #3
"Kaula", #4
"Oahu", #5
"Molokai", #6
"Maui", #7
"Lanai", #8
"Molokini", #9
"Kahoolawe", #10
"Hawaii")[11]
library(sdmTMB)
library(dplyr)
library(ggplot2)
library(rgdal)
library(colorRamps)
rm(list = ls())
