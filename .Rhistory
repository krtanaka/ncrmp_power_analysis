# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
ggplot() +
# geom_sf(data = pacific_crop, size = 0.01, fill = "gray", color = "gray") +
geom_hex(data = df, aes(x = LONGITUDE_LOV, y = LATITUDE_LOV), bins = 10) +
scale_fill_viridis_c("") +
# facet_grid(Month ~ Year) +
facet_wrap(~Year) +
# facet_wrap(~Month) +
# scale_x_continuous(expand = c(0, 0), "") +
# scale_y_continuous(expand = c(0, 0), "") +
ggdark::dark_theme_void() +
coord_fixed()
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 10
min_sets = 1
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
# options(scipen = 999, digits = 2)
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid))
strat_det <- cells[, list(strat_cells = .N), by = "strat"]
strat_det$tow_area <- prod(trawl_dim)
strat_det$cell_area <- prod(res(sim$grid))
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid))
strat_det$strat_sets <- round(strat_det$strat_area * set_den)
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets
strat_det$area_prop = rescale(strat_det$strat_area, to = c(0.1, 0.9))
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 10
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
df = cells %>% group_by(strat) %>% sample_n(500)
df = cells %>% group_by(strat) %>% sample_n(10)
cells %>% group_by(strat) %>% sample_n(10)
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 10
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
# options(scipen = 999, digits = 2)
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
strat_det$area_prop = rescale(strat_det$strat_area, to = c(0.1, 0.9)); strat_det
df = cells
df = strat_det
df$n = 100*df$area_prop
df
df$n = round(100*df$area_prop, 0)
df
Number of the total population of the 5 groups =
N = sum(strat_det$strat_area)
So, sample size for group 1 would be,
strat_det$m = (100 * strat_det$strat_area) / sum(strat_det$strat_area)
strat_det
# strat_det$area_prop = rescale(strat_det$strat_area, to = c(0.1, 0.9)); strat_det
strat_det$m = round((100 * strat_det$strat_area) / sum(strat_det$strat_area), 0)
strat_det
# strat_det$area_prop = rescale(strat_det$strat_area, to = c(0.1, 0.9)); strat_det
strat_det$m = round((10 * strat_det$strat_area) / sum(strat_det$strat_area), 0)
strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 10
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
# options(scipen = 999, digits = 2)
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
# strat_det$area_prop = rescale(strat_det$strat_area, to = c(0.1, 0.9)); strat_det
strat_det$strat_sets = round((10 * strat_det$strat_area) / sum(strat_det$strat_area), 0)
cells <- merge(cells, strat_det, by = c("strat")); cells
# strat_det$area_prop = rescale(strat_det$strat_area, to = c(0.1, 0.9)); strat_det
strat_det$strat_sets = round((10 * strat_det$strat_area) / sum(strat_det$strat_area), 0); strat_det
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 10
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
# options(scipen = 999, digits = 2)
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
total_sample = 100
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 10
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
total_sample = 100
# options(scipen = 999, digits = 2)
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets = round((total_sample * strat_det$strat_area) / sum(strat_det$strat_area), 0); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets = round((total_sample * strat_det$strat_area) / sum(strat_det$strat_area), 0); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
cells <- merge(cells, strat_det, by = c("strat")); cells
i <- rep(seq(nrow(cells)), times = length(sim$years)); i
y <- rep(sim$years, each = nrow(cells)); y
cells <- cells[i, ]
cells$year <- y
i <- rep(seq(nrow(cells)), times = n_sims); i
s <- rep(seq(n_sims), each = nrow(cells)); s
cells <- cells[i, ]
cells$sim <- s
# proportional sampling
subsets_prop <- cells[, .SD[sample(.N, strat_area, replace = resample_cells, prob = strat_area)],
by = c("sim", "year", "strat")]
subsets_prop[, `:=`(cell_sets, .N), by = c("sim", "year", "cell")]; subsets_prop
subsets_prop$set <- seq(nrow(subsets_prop)); subsets_prop
subsets_prop$design = "proportional"; subsets_prop
#equal sampling
subsets_norm <- cells[, .SD[sample(.N, strat_sets, replace = resample_cells)],
by = c("sim", "year", "strat")]
subsets_norm[, `:=`(cell_sets, .N), by = c("sim", "year", "cell")]; subsets_norm
subsets_norm$set <- seq(nrow(subsets_norm)); subsets_norm
subsets_norm$design = "equal"; subsets_norm
sim_sets = rbind(subsets_norm, subsets_prop)
sim_sets = sim_sets %>%
group_by(x, y, design) %>%
summarise(strat = mean(strat))
sim_sets %>%
# subset(strat == 1) %>%
ggplot(aes(x, y, color = factor(strat))) +
geom_point() +
coord_fixed() +
scale_color_discrete("") +
facet_grid(design ~ strat)
sim_sets %>%
group_by(strat, design) %>%
summarise(n = n()) %>%
ggplot(aes(strat, n, fill = design)) +
geom_bar(position = "dodge", stat = "identity")
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 10
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
total_sample = 50
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets = round((total_sample * strat_det$strat_area) / sum(strat_det$strat_area), 0); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
cells <- merge(cells, strat_det, by = c("strat")); cells
i <- rep(seq(nrow(cells)), times = length(sim$years)); i
y <- rep(sim$years, each = nrow(cells)); y
cells <- cells[i, ]
cells$year <- y
i <- rep(seq(nrow(cells)), times = n_sims); i
s <- rep(seq(n_sims), each = nrow(cells)); s
cells <- cells[i, ]
cells$sim <- s
# proportional sampling
subsets_prop <- cells[, .SD[sample(.N, strat_area, replace = resample_cells, prob = strat_area)],
by = c("sim", "year", "strat")]
# proportional sampling
subsets_prop <- cells[, .SD[sample(.N, strat_area, replace = resample_cells, prob = strat_area)],
by = c("sim", "year", "strat")]
subsets_prop[, `:=`(cell_sets, .N), by = c("sim", "year", "cell")]; subsets_prop
subsets_prop$set <- seq(nrow(subsets_prop)); subsets_prop
subsets_prop$design = "proportional"; subsets_prop
#equal sampling
# proportional sampling
subsets_prop <- cells[, .SD[sample(.N, strat_area, replace = resample_cells, prob = strat_area)],
by = c("sim", "year", "strat")]
subsets_prop[, `:=`(cell_sets, .N), by = c("sim", "year", "cell")]; subsets_prop
subsets_prop$set <- seq(nrow(subsets_prop)); subsets_prop
subsets_prop$design = "proportional"; subsets_prop
#equal sampling
#equal sampling
subsets_norm <- cells[, .SD[sample(.N, strat_sets, replace = resample_cells)],
by = c("sim", "year", "strat")]
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 10
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
total_sample = 50
# options(scipen = 999, digits = 2)
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets = round((total_sample * strat_det$strat_area) / sum(strat_det$strat_area), 0); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
cells <- merge(cells, strat_det, by = c("strat")); cells
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 2
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
total_sample = 30
total_sample = 30
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets = round((total_sample * strat_det$strat_area) / sum(strat_det$strat_area), 0); strat_det
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets = round((total_sample * strat_det$strat_area) / sum(strat_det$strat_area), 0); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
cells <- merge(cells, strat_det, by = c("strat")); cells
i <- rep(seq(nrow(cells)), times = length(sim$years)); i
y <- rep(sim$years, each = nrow(cells)); y
cells <- cells[i, ]
cells$year <- y
i <- rep(seq(nrow(cells)), times = n_sims); i
s <- rep(seq(n_sims), each = nrow(cells)); s
cells <- cells[i, ]
cells$sim <- s
# proportional sampling
subsets_prop <- cells[, .SD[sample(.N, strat_area, replace = resample_cells, prob = strat_area)],
by = c("sim", "year", "strat")]
subsets_prop[, `:=`(cell_sets, .N), by = c("sim", "year", "cell")]; subsets_prop
subsets_prop$set <- seq(nrow(subsets_prop)); subsets_prop
subsets_prop$design = "proportional"; subsets_prop
#equal sampling
subsets_norm <- cells[, .SD[sample(.N, strat_sets, replace = resample_cells)],
by = c("sim", "year", "strat")]
subsets_norm[, `:=`(cell_sets, .N), by = c("sim", "year", "cell")]; subsets_norm
subsets_norm$set <- seq(nrow(subsets_norm)); subsets_norm
subsets_norm$design = "equal"; subsets_norm
sim_sets = rbind(subsets_norm, subsets_prop)
sim_sets = sim_sets %>%
group_by(x, y, design) %>%
summarise(strat = mean(strat))
sim_sets %>%
# subset(strat == 1) %>%
ggplot(aes(x, y, color = factor(strat))) +
geom_point() +
coord_fixed() +
scale_color_discrete("") +
facet_grid(design ~ strat)
sim_sets %>%
group_by(strat, design) %>%
summarise(n = n()) %>%
ggplot(aes(strat, n, fill = design)) +
geom_bar(position = "dodge", stat = "identity")
sim_sets = sim_sets %>%
group_by(x, y, design) %>%
summarise(strat = mean(strat))
sim_sets
##########################################
### Simulate stratified-random survey  ###
##########################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
rm(list = ls())
# set.seed(10)
islands = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", islands, ".RData"))
n_sims = 1
min_sets = 2
set_den = 2/1000
trawl_dim = c(0.01, 0.0353)
resample_cells = FALSE
total_sample = 30
# options(scipen = 999, digits = 2)
sim = sim_abundance(years = 2010:2020, ages = 1:5,
R = sim_R(log_mean = log(100),
log_sd = 0.9),
Z = sim_Z(log_mean = log(0.1))) %>%
sim_distribution(grid = survey_grid_kt)
strat_sets <- cell_sets <- NULL
cells <- data.table(rasterToPoints(sim$grid)); cells
strat_det <- cells[, list(strat_cells = .N), by = "strat"]; strat_det
strat_det$tow_area <- prod(trawl_dim); strat_det
strat_det$cell_area <- prod(res(sim$grid)); strat_det
strat_det$strat_area <- strat_det$strat_cells * prod(res(sim$grid)); strat_det
strat_det$strat_sets <- round(strat_det$strat_area * set_den); strat_det
strat_det$strat_sets = round((total_sample * strat_det$strat_area) / sum(strat_det$strat_area), 0); strat_det
strat_det$strat_sets[strat_det$strat_sets < min_sets] <- min_sets; strat_det
# strat_det$area_prop = rescale(strat_det$strat_area, to = c(0.1, 0.9)); strat_det
cells <- merge(cells, strat_det, by = c("strat")); cells
i <- rep(seq(nrow(cells)), times = length(sim$years)); i
y <- rep(sim$years, each = nrow(cells)); y
cells <- cells[i, ]
cells$year <- y
i <- rep(seq(nrow(cells)), times = n_sims); i
s <- rep(seq(n_sims), each = nrow(cells)); s
cells <- cells[i, ]
cells$sim <- s
