maya_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < meanY, "N", "S"),
EW = ifelse(x < meanX, "W", "E"),
NSEW = paste0(NS, EW))
maya_islands = rbind(grid, maya_islands)
print(islands[i])
}
library(dplyr)
islands = is$ISLAND.CODE
maya_islands = NULL
maya_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "N", "S"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
maya_islands = rbind(grid, maya_islands)
print(islands[i])
}
maya_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free")
summarise(x = round(x, digits = 2),
y = round(y, digits = 2)) %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free")
maya_islands %>%
group_by(x, y) %>%
summarise(x = round(x, digits = 2),
y = round(y, digits = 2)) %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free")
maya_islands %>%
group_by(x, y) %>%
summarise(x = round(x, digits = 2),
y = round(y, digits = 2))
maya_islands %>%
group_by(x, y, island) %>%
summarise(x = round(x, digits = 2),
y = round(y, digits = 2)) %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free")
maya_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free")
maya_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free") +
scale_fill_discrete()
maya_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free") +
scale_fill_viridis_d()
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "S", "N"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
maya_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "S", "N"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
maya_islands = rbind(grid, maya_islands)
print(islands[i])
}
maya_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free") +
scale_fill_viridis_d()
rm(list = ls())
setwd("C:/Users/Kisei.Tanaka/Desktop")
# clean work station
rm(list = ls())
setwd("C:/Users/Kisei.Tanaka/Desktop")
# set working directory
setwd("C:/Users/Kisei.Tanaka/Desktop")
?setwd
# load spatial grid
df = raster("jplG1SST_b799_dd6c_7662.nc") # spatial grids around MHIs around at 1-km resolution
library(ggplot2
library(ggplot2)
library(raster)
library(dplyr)
library(ggplot2)
# set working directory
setwd("C:/Users/Kisei.Tanaka/Desktop")
# load spatial grid
df = raster("jplG1SST_b799_dd6c_7662.nc") # spatial grids around MHIs around at 1-km resolution
# load Maya's list of islands
is = read.csv("/Users/Kisei.Tanaka/Desktop/Reference Spreadsheet - Island_Extents.csv")
is$LEFT_XMIN = ifelse(is$LEFT_XMIN < 0, is$LEFT_XMIN + 360, is$LEFT_XMIN)
is$RIGHT_XMAX = ifelse(is$RIGHT_XMAX < 0, is$RIGHT_XMAX + 360, is$RIGHT_XMAX)
# loop through the list, assign spatial sectors (NW, NE, SW, SE) for each island
mayas_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "S", "N"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
maya_islands = rbind(grid, maya_islands)
print(islands[i])
}
# loop through the list, assign spatial sectors (NW, NE, SW, SE) for each island
mayas_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "S", "N"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
maya_islands = rbind(grid, maya_islands)
print(islands[i])
}
# clean work station
rm(list = ls())
library(raster)
library(dplyr)
library(ggplot2)
# set working directory
setwd("C:/Users/Kisei.Tanaka/Desktop")
# load spatial grid
df = raster("jplG1SST_b799_dd6c_7662.nc") # spatial grids around MHIs around at 1-km resolution
df = rasterToPoints(df)
df = as.data.frame(df[,1:2])
df$x = ifelse(df$x < 0, df$x + 360, df$x)
# load Maya's list of islands
is = read.csv("/Users/Kisei.Tanaka/Desktop/Reference Spreadsheet - Island_Extents.csv")
is$LEFT_XMIN = ifelse(is$LEFT_XMIN < 0, is$LEFT_XMIN + 360, is$LEFT_XMIN)
is$RIGHT_XMAX = ifelse(is$RIGHT_XMAX < 0, is$RIGHT_XMAX + 360, is$RIGHT_XMAX)
islands = is$ISLAND.CODE
# load Maya's list of islands
is = read.csv("Reference Spreadsheet - Island_Extents.csv")
is$LEFT_XMIN = ifelse(is$LEFT_XMIN < 0, is$LEFT_XMIN + 360, is$LEFT_XMIN)
is$RIGHT_XMAX = ifelse(is$RIGHT_XMAX < 0, is$RIGHT_XMAX + 360, is$RIGHT_XMAX)
islands = is$ISLAND.CODE
# loop through the list, assign spatial sectors (NW, NE, SW, SE) for each island
mayas_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "S", "N"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
maya_islands = rbind(grid, maya_islands)
print(islands[i])
}
# loop through the list, assign spatial sectors (NW, NE, SW, SE) for each island
mayas_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "S", "N"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
mayas_islands = rbind(grid, mayas_islands)
print(islands[i])
}
# plot and check output
maya_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free") +
scale_fill_viridis_d()
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free") +
scale_fill_viridis_d()
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free") +
scale_fill_viridis_d() +
theme_minimal()
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
facet_wrap(.~island, scale = "free") +
scale_fill_viridis_d() +
theme_void()
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_point() +
facet_wrap(.~island, scale = "free") +
scale_fill_viridis_d() +
theme_void()
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_point() +
scale_fill_viridis_d() +
scale_color_viridis_d() +
facet_wrap(.~island, scale = "free") +
theme_void()
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, color = NSEW)) +
geom_point() +
scale_fill_viridis_d() +
scale_color_viridis_d() +
facet_wrap(.~island, scale = "free") +
theme_void()
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_point() +
scale_fill_viridis_d("") +
facet_wrap(.~island, scale = "free") +
theme_void()
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
scale_fill_viridis_d("") +
facet_wrap(.~island, scale = "free") +
theme_void()
library(readr)
write_csv("Mayas_Islands.csv")
write_csv(mayas_islands, "Mayas_Islands.csv")
colnames(mayas_islands)
colnames(mayas_islands)[1:2] = c("lon", "lat")
write_csv(mayas_islands, "Mayas_Islands.csv")
# set working directory
setwd(paste0("C:/Users/", Sys.info()[7], "/Desktop"))
# load spatial grid
df = raster("jplG1SST_b799_dd6c_7662.nc") # spatial grids around MHIs around at 1-km resolution
df = rasterToPoints(df)
df = as.data.frame(df[,1:2])
df$x = ifelse(df$x < 0, df$x + 360, df$x)
# load Maya's list of islands
is = read.csv("Reference Spreadsheet - Island_Extents.csv")
is$LEFT_XMIN = ifelse(is$LEFT_XMIN < 0, is$LEFT_XMIN + 360, is$LEFT_XMIN)
is$RIGHT_XMAX = ifelse(is$RIGHT_XMAX < 0, is$RIGHT_XMAX + 360, is$RIGHT_XMAX)
islands = is$ISLAND.CODE
# loop through the list, assign spatial sectors (NW, NE, SW, SE) for each island
mayas_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "S", "N"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
mayas_islands = rbind(grid, mayas_islands)
print(islands[i])
}
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
scale_fill_viridis_d("") +
facet_wrap(.~island, scale = "free") +
theme_void()
colnames(mayas_islands)[1:2] = c("lon", "lat")
# export as a csv file
write_csv(mayas_islands, "Mayas_Islands.csv")
# clean work station
rm(list = ls())
# packages you need
library(raster)
library(dplyr)
library(ggplot2)
library(readr)
# set working directory
setwd(paste0("C:/Users/", Sys.info()[7], "/Desktop"))
# import spatial grid
df = raster("jplG1SST_b799_dd6c_7662.nc") # spatial grids around MHIs around at 1-km resolution
df = rasterToPoints(df)
df = as.data.frame(df[,1:2])
df$x = ifelse(df$x < 0, df$x + 360, df$x)
# import Maya's list of islands
is = read_csv("Reference Spreadsheet - Island_Extents.csv")
is$LEFT_XMIN = ifelse(is$LEFT_XMIN < 0, is$LEFT_XMIN + 360, is$LEFT_XMIN)
is$RIGHT_XMAX = ifelse(is$RIGHT_XMAX < 0, is$RIGHT_XMAX + 360, is$RIGHT_XMAX)
islands = is$ISLAND.CODE
# loop through the list, assign spatial sectors (NW, NE, SW, SE) for each island
mayas_islands = NULL
for (i in 1:length(islands)) {
# i = 1
island = is %>% subset(ISLAND.CODE == islands[i])
grid = df %>%
subset(x > island$RIGHT_XMAX) %>%
subset(x < island$LEFT_XMIN) %>%
subset(y < island$BOTTOM_YMIN) %>%
subset(y > island$TOP_YMAX)
grid$island = islands[i]
grid = grid %>%
group_by(island) %>%
mutate(medianY = median(y),
medianX = median(x),
NS = ifelse(y < medianY, "S", "N"),
EW = ifelse(x < medianX, "W", "E"),
NSEW = paste0(NS, EW))
mayas_islands = rbind(grid, mayas_islands)
print(islands[i])
}
# plot and check output
mayas_islands %>%
ggplot(aes(x, y, fill = NSEW)) +
geom_raster() +
scale_fill_viridis_d("") +
facet_wrap(.~island, scale = "free") +
theme_void()
colnames(mayas_islands)[1:2] = c("lon", "lat")
# export as a csv file
write_csv(mayas_islands, "Mayas_Islands.csv")
# import spatial grid
df = raster("jplG1SST_b799_dd6c_7662.nc") # spatial grids around MHIs around at 1-km resolution
# clean work station
rm(list = ls())
# packages you need
library(raster)
library(dplyr)
library(ggplot2)
library(readr)
# set working directory
setwd(paste0("C:/Users/", Sys.info()[7], "/Desktop"))
# import spatial grid
df = raster("jplG1SST_b799_dd6c_7662.nc") # s
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(ggdark)
library(patchwork)
rm(list = ls())
set.seed(42)
# pick an island ----------------------------------------------------------
island = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", island, ".RData"))
print(island)
# simulate spatiotemporal dyamic LMR --------------------------------------
sim = sim_abundance(years = 2000:2020,
ages = 1:2,
R = sim_R(log_mean = log(100), log_sd = 0.8),
Z = sim_Z(log_mean = log(0.5))) %>%
sim_distribution(grid = survey_grid_kt)
###################################################################################################################
### Simulate stratified-random surveys in MHI region with simulated fish density (count (n) or biomass (g/sq.m) ###
### Simple Power analysis by comparing different survey "efforts"                                               ###
###################################################################################################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(ggdark)
library(patchwork)
rm(list = ls())
set.seed(42)
# options(scipen = 999,
# pick an island ----------------------------------------------------------
island = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", island, ".RData"))
print(island)
# simulate spatiotemporal dyamic LMR --------------------------------------
sim = sim_abundance(years = 2000:2020,
ages = 1:2,
R = sim_R(log_mean = log(100), log_sd = 0.8),
Z = sim_Z(log_mean = log(0.5))) %>%
sim_distribution(grid = survey_grid_kt)
###################################################################################################################
### Simulate stratified-random surveys in MHI region with simulated fish density (count (n) or biomass (g/sq.m) ###
### Simple Power analysis by comparing different survey "efforts"                                               ###
###################################################################################################################
library(SimSurvey)
library(raster)
library(data.table)
library(ggplot2)
library(dplyr)
library(ggdark)
library(patchwork)
rm(list = ls())
set.seed(42)
# pick an island ----------------------------------------------------------
island = c("Hawaii", "Kahoolawe", "Kauai", "Lanai", "Maui", "Molokai", "Niihau", "Oahu" )[sample(1:8, 1)]
load(paste0("data/survey_grid_", island, ".RData"))
library(sdmTMB)
library(dplyr)
library(ggplot2)
library(rgdal)
library(colorRamps)
rm(list = ls())
region = "MHI"
uku_or_not = T
islands = c("Kauai", #1
"Lehua", #2
"Niihau", #3
"Kaula", #4
"Oahu", #5
"Molokai", #6
"Maui", #7
"Lanai", #8
"Molokini", #9
"Kahoolawe", #10
"Hawaii")[11]
islands = c("Kauai", #1
"Lehua", #2
"Niihau", #3
"Kaula", #4
"Oahu", #5
"Molokai", #6
"Maui", #7
"Lanai", #8
"Molokini", #9
"Kahoolawe", #10
"Hawaii")#[11]
response_variable = "fish_count";      sp = ifelse(uku_or_not == T, "Aprion virescens", "Chromis vanderbilti")
response_variable = "fish_biomass";    sp = ifelse(uku_or_not == T, "Aprion virescens", "Acanthurus olivaceus")
load("data/ALL_REA_FISH_RAW.rdata")
